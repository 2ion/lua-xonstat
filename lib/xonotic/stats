#!/usr/bin/env lua

local http = require 'socket.http'
local json = require 'json'

local Player = {} 

function Player.new(id)
  local o = setmetatable({}, { __index = Player })
  o.id = id or 0
  return o:get()
end

function Player:get(id)
  if id then self.id = id end
  local b = http.request(string.format("http://stats.xonotic.org/player/%d.json", self.id))
  self.data = json.decode(b or "{}", true)
  return self
end

function Player:lookup(key)
  if not self.refcache then self.refcache = {} end
  if self.refcache and self.refcache[key] then return self.refcache[key] end
  local refs = {}
  local function recurse(t, ...)
    local p = select('#', ...) > 0 and (({...})[1] .. ".") or "."
    for k,v in pairs(t) do
      if type(v) == "table" then
        recurse(v, p .. k)
      elseif k == key then
        refs[p .. k] = v
      end
    end
  end
  recurse(self.data)
  self.refcache[key] = refs
  return refs
end

function Player:lookup_path(key, expr)
  local ret = {}
    for p,v in pairs(self:lookup(key)) do
    if p:match(expr) then
      ret[p] = v
    end
  end
  return ret
end

return { player = Player }
